import os
import sys
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv
from utils import get_forex_signal

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤)
load_dotenv()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
ALPHAVANTAGE_API_KEY = os.getenv("ALPHAVANTAGE_API_KEY")

if not TELEGRAM_BOT_TOKEN:
    print("‚ùå ERROR: TELEGRAM_BOT_TOKEN is not set! Set it in Render Dashboard ‚Üí Environment.", flush=True)
    sys.exit(1)

print("‚úÖ –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞ TELEGRAM:", len(TELEGRAM_BOT_TOKEN), flush=True)

# --- –ë–æ—Ç ---
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

@dp.message(commands=["start"])
async def start_command(message: types.Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìà –°–∏–≥–Ω–∞–ª –Ω–∞ 2 –º–∏–Ω", callback_data="signal_2")],
        [InlineKeyboardButton(text="üìâ –°–∏–≥–Ω–∞–ª –Ω–∞ 5 –º–∏–Ω", callback_data="signal_5")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞:", reply_markup=kb)

@dp.callback_query()
async def callbacks(call: types.CallbackQuery):
    if call.data.startswith("signal_"):
        period = int(call.data.split("_")[1])
        await call.message.answer("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ä—ã–Ω–æ–∫...")
        signal = await get_forex_signal(period)
        await call.message.answer(f"üìä –°–∏–≥–Ω–∞–ª ({period} –º–∏–Ω): {signal}")

async def main():
    print("üöÄ Bot started successfully!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

