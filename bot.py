import os
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "").strip()

print(f"‚úÖ –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞ TELEGRAM: {len(TELEGRAM_BOT_TOKEN)}")

if not TELEGRAM_BOT_TOKEN:
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Render.")

bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìà –í–≤–µ—Ä—Ö"), KeyboardButton(text="üìâ –í–Ω–∏–∑")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞:", reply_markup=menu)

@dp.message(F.text == "üìà –í–≤–µ—Ä—Ö")
async def signal_up(message: Message):
    await message.answer("üîº –°–∏–≥–Ω–∞–ª –Ω–∞ –í–í–ï–†–• (–¥–µ–π—Å—Ç–≤—É–µ—Ç 2-5 –º–∏–Ω—É—Ç)")

@dp.message(F.text == "üìâ –í–Ω–∏–∑")
async def signal_down(message: Message):
    await message.answer("üîΩ –°–∏–≥–Ω–∞–ª –Ω–∞ –í–ù–ò–ó (–¥–µ–π—Å—Ç–≤—É–µ—Ç 2-5 –º–∏–Ω—É—Ç)")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
